apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: sample-pipeline
  annotations:
    tekton.dev/output_artifacts: '{"start-ray-cluster": [{"key": "artifacts/$PIPELINERUN/start-ray-cluster/output.tgz",
      "name": "start-ray-cluster-output", "path": "/tmp/outputs/output/data"}]}'
    tekton.dev/input_artifacts: '{"stop-ray-cluster": [{"name": "start-ray-cluster-output",
      "parent_task": "start-ray-cluster"}]}'
    tekton.dev/artifact_bucket: mlpipeline
    tekton.dev/artifact_endpoint: minio-service.kubeflow:9000
    tekton.dev/artifact_endpoint_scheme: http://
    tekton.dev/artifact_items: '{"start-ray-cluster": [["output", "$(results.output.path)"]],
      "stop-ray-cluster": []}'
    sidecar.istio.io/inject: "false"
    tekton.dev/template: ''
    pipelines.kubeflow.org/big_data_passing_format: $(workspaces.$TASK_NAME.path)/artifacts/$ORIG_PR_NAME/$TASKRUN_NAME/$TASK_PARAM_NAME
    pipelines.kubeflow.org/pipeline_spec: '{"inputs": [{"default": "ktp-test", "name":
      "name", "optional": true, "type": "String"}, {"default": "6", "name": "delay",
      "optional": true, "type": "Integer"}], "name": "sample-pipeline"}'
  labels:
    pipelines.kubeflow.org/pipelinename: ''
    pipelines.kubeflow.org/generation: ''
spec:
  params:
  - name: delay
    value: '6'
  - name: name
    value: ktp-test
  pipelineSpec:
    params:
    - name: delay
      default: '6'
    - name: name
      default: ktp-test
    tasks:
    - name: start-ray-cluster
      params:
      - name: delay
        value: $(params.delay)
      - name: name
        value: $(params.name)
      taskSpec:
        steps:
        - name: main
          command:
          - python
          - /pipelines/component/src/start-ray-cluster.py
          - --name
          - $(inputs.params.name)
          - --delay
          - $(inputs.params.delay)
          - --output_path
          - $(results.output.path)
          image: docker.io/roytman/ray-operations:0.0.1
          imagePullPolicy: Always
        params:
        - name: delay
        - name: name
        results:
        - name: output
          type: string
          description: /tmp/outputs/output/data
        metadata:
          labels:
            pipelines.kubeflow.org/cache_enabled: "true"
          annotations:
            pipelines.kubeflow.org/component_spec_digest: '{"name": "Start Ray Cluster",
              "outputs": [{"name": "output", "type": "String"}], "version": "Start
              Ray Cluster@sha256=9ce658a8f679258aa7d35e33faf3d3f6f8fa9ec54ee8e2f08d4d672409bc369b"}'
            pipelines.kubeflow.org/max_cache_staleness: P0D
    - name: stop-ray-cluster
      params:
      - name: start-ray-cluster-output
        value: $(tasks.start-ray-cluster.results.output)
      taskSpec:
        steps:
        - name: main
          command:
          - python
          - /pipelines/component/src/stop-ray-cluster.py
          - --name
          - $(inputs.params.start-ray-cluster-output)
          image: docker.io/roytman/ray-operations:0.0.1
          imagePullPolicy: Always
        params:
        - name: start-ray-cluster-output
        metadata:
          labels:
            pipelines.kubeflow.org/cache_enabled: "true"
          annotations:
            pipelines.kubeflow.org/component_spec_digest: '{"name": "Stop Ray Cluster",
              "outputs": [], "version": "Stop Ray Cluster@sha256=a587900832b197c64de8f0c8682fab5271c1c586c5b114b83ebae9bf10a87efb"}'
            pipelines.kubeflow.org/max_cache_staleness: P0D
